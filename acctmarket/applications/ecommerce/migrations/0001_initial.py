# Generated by Django 5.0.10 on 2024-12-16 10:41

import acctmarket.utils.media
import acctmarket.utils.models
import auto_prefetch
import ckeditor_uploader.fields
import cloudinary.models
import django.core.validators
import django.db.models.deletion
import django.db.models.manager
import taggit.managers
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('refer', '0001_initial'),
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.CharField(default=acctmarket.utils.models.generate_uuid, editable=False, max_length=120, primary_key=True, serialize=False, unique=True)),
                ('visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('address', models.CharField(blank=True, default='', max_length=100)),
                ('status', models.BooleanField(default=False)),
                ('user', auto_prefetch.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='User Address')),
            ],
            options={
                'verbose_name_plural': 'Address',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='CartOrder',
            fields=[
                ('id', models.CharField(default=acctmarket.utils.models.generate_uuid, editable=False, max_length=120, primary_key=True, serialize=False, unique=True)),
                ('visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=100, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('paid_status', models.BooleanField(default=False)),
                ('product_status', models.CharField(choices=[('PROCESSING', 'PROCESSING'), ('SHIPPED', 'SHIPPED'), ('DELIVERED', 'DELIVERED')], default='PROCESSING', max_length=30)),
                ('payment_method', models.CharField(blank=True, max_length=20)),
                ('user', auto_prefetch.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cart_orders', to=settings.AUTH_USER_MODEL, verbose_name='User Order')),
            ],
            options={
                'verbose_name_plural': 'Cart Orders',
                'ordering': ['-created_at', '-id'],
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.CharField(default=acctmarket.utils.models.generate_uuid, editable=False, max_length=120, primary_key=True, serialize=False, unique=True)),
                ('visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(blank=True, default='', max_length=50)),
                ('image', cloudinary.models.CloudinaryField(blank=True, default='', max_length=255, verbose_name='image')),
                ('slug', models.SlugField(blank=True, default='')),
                ('sub_category', auto_prefetch.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='ecommerce.category')),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='CharUUIDTaggedItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.CharField(db_index=True, max_length=120)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_tagged_items', to='contenttypes.contenttype', verbose_name='content type')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_items', to='taggit.tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.CharField(default=acctmarket.utils.models.generate_uuid, editable=False, max_length=120, primary_key=True, serialize=False, unique=True)),
                ('visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, default='', max_digits=100)),
                ('reference', models.CharField(blank=True, default='', max_length=100, unique=True)),
                ('payment_id', models.CharField(blank=True, null=True)),
                ('status', models.CharField(blank=True, default='pending', max_length=20)),
                ('verified', models.BooleanField(default=False)),
                ('order', auto_prefetch.OneToOneField(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payment', to='ecommerce.cartorder')),
                ('user', auto_prefetch.ForeignKey(blank=True, default='', on_delete=django.db.models.deletion.CASCADE, related_name='payments', to=settings.AUTH_USER_MODEL)),
                ('wallet', auto_prefetch.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='refer.wallet')),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.CharField(default=acctmarket.utils.models.generate_uuid, editable=False, max_length=120, primary_key=True, serialize=False, unique=True)),
                ('visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(blank=True, default='', max_length=50)),
                ('image', cloudinary.models.CloudinaryField(blank=True, default='', max_length=255, verbose_name='image')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(default='', null=True, verbose_name='Description')),
                ('price', models.DecimalField(decimal_places=2, max_digits=100, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('oldprice', models.DecimalField(decimal_places=2, max_digits=100, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('quantity_in_stock', models.IntegerField(blank=True, default=0, null=True)),
                ('specification', ckeditor_uploader.fields.RichTextUploadingField(default='', null=True, verbose_name='specification')),
                ('product_status', models.CharField(choices=[('DRAFT', 'DRAFT'), ('DISABLED', 'DISABLED'), ('IN_REVIEW', 'IN_REVIEW'), ('REJECTED', 'REJECTED'), ('PUBLISHED', 'PUBLISHED')], default='IN_REVIEW', max_length=10)),
                ('in_stock', models.BooleanField(default=True)),
                ('featured', models.BooleanField(default=False)),
                ('digital', models.BooleanField(default=True)),
                ('best_seller', models.BooleanField(default=False)),
                ('special_offer', models.BooleanField(default=False)),
                ('just_arrived', models.BooleanField(default=True)),
                ('deal_of_the_week', models.BooleanField(default=False)),
                ('deal_start_date', models.DateTimeField(blank=True, null=True)),
                ('deal_end_date', models.DateTimeField(blank=True, null=True)),
                ('resource', models.FileField(blank=True, null=True, upload_to=acctmarket.utils.media.MediaHelper.get_file_upload_path)),
                ('category', auto_prefetch.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='ecommerce.category', verbose_name='Category')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='ecommerce.CharUUIDTaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('user', auto_prefetch.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name_plural': 'Products',
                'ordering': ['-created_at', '-updated_at'],
                'permissions': [('can_crud_product', 'Can create, update, and delete product')],
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.CharField(default=acctmarket.utils.models.generate_uuid, editable=False, max_length=120, primary_key=True, serialize=False, unique=True)),
                ('visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(help_text='Unique coupon code.', max_length=20, unique=True)),
                ('discount_type', models.CharField(choices=[('Percentage', 'Percentage'), ('Fixed', 'Fixed')], help_text='Type of discount.', max_length=10)),
                ('discount_value', models.DecimalField(decimal_places=2, help_text='Value of the discount. For percentage, use values between 0 and 100.', max_digits=10)),
                ('universal', models.BooleanField(default=False, help_text='If True, this coupon applies to all products and categories.')),
                ('usage_limit', models.PositiveIntegerField(default=1, help_text='Maximum number of times the coupon can be used.')),
                ('times_used', models.PositiveIntegerField(default=0, editable=False, help_text='How many times the coupon has been used.')),
                ('valid_from', models.DateField(blank=True, help_text='Start date of coupon validity.', null=True)),
                ('valid_to', models.DateField(blank=True, help_text='End date of coupon validity.', null=True)),
                ('applicable_categories', models.ManyToManyField(blank=True, help_text='Categories to which the coupon applies.', to='ecommerce.category')),
                ('applicable_products', models.ManyToManyField(blank=True, help_text='Products to which the coupon applies.', to='ecommerce.product')),
            ],
            options={
                'verbose_name': 'Coupon',
                'verbose_name_plural': 'Coupons',
                'ordering': ['-created_at'],
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='CartOrderItems',
            fields=[
                ('id', models.CharField(default=acctmarket.utils.models.generate_uuid, editable=False, max_length=120, primary_key=True, serialize=False, unique=True)),
                ('visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('transaction_id', models.CharField(blank=True, default=uuid.uuid4, editable=False, unique=True)),
                ('unique_key', models.CharField(blank=True, max_length=255, null=True)),
                ('quantity', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('price', models.DecimalField(decimal_places=2, max_digits=100, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total', models.DecimalField(decimal_places=2, max_digits=100, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('invoice_no', models.CharField(blank=True, default='', max_length=50)),
                ('keys_and_passwords', models.JSONField(blank=True, default=list)),
                ('order', auto_prefetch.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='ecommerce.cartorder', verbose_name='Order')),
                ('product', auto_prefetch.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='ecommerce.product', verbose_name='Product')),
            ],
            options={
                'verbose_name_plural': 'Cart Order Items',
                'ordering': ['-created_at'],
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ProductImages',
            fields=[
                ('id', models.CharField(default=acctmarket.utils.models.generate_uuid, editable=False, max_length=120, primary_key=True, serialize=False, unique=True)),
                ('visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(blank=True, default='', max_length=50)),
                ('image', cloudinary.models.CloudinaryField(blank=True, default='', max_length=255, verbose_name='image')),
                ('product', auto_prefetch.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='ecommerce.product', verbose_name='Product image')),
            ],
            options={
                'verbose_name_plural': 'Product images',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ProductKey',
            fields=[
                ('id', models.CharField(default=acctmarket.utils.models.generate_uuid, editable=False, max_length=120, primary_key=True, serialize=False, unique=True)),
                ('visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('key', models.CharField(max_length=255)),
                ('password', models.CharField(max_length=255)),
                ('is_used', models.BooleanField(default=False)),
                ('product', auto_prefetch.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='ecommerce.product', verbose_name='Product Key')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'prefetch_manager',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ProductReview',
            fields=[
                ('id', models.CharField(default=acctmarket.utils.models.generate_uuid, editable=False, max_length=120, primary_key=True, serialize=False, unique=True)),
                ('visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('review', models.TextField()),
                ('rating', models.IntegerField(choices=[(1, '⭐'), (2, '⭐⭐'), (3, '⭐⭐⭐'), (4, '⭐⭐⭐⭐'), (5, '⭐⭐⭐⭐⭐')], default=3)),
                ('product', auto_prefetch.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='ecommerce.product', verbose_name='Product Review')),
                ('user', auto_prefetch.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='User Review')),
            ],
            options={
                'verbose_name_plural': 'Product Reviews',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='WishList',
            fields=[
                ('id', models.CharField(default=acctmarket.utils.models.generate_uuid, editable=False, max_length=120, primary_key=True, serialize=False, unique=True)),
                ('visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', auto_prefetch.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='ecommerce.product', verbose_name='Product Wishlist')),
                ('user', auto_prefetch.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name_plural': 'Wishlists',
                'ordering': ['-created_at'],
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddConstraint(
            model_name='coupon',
            constraint=models.CheckConstraint(check=models.Q(('valid_to__gte', models.F('valid_from'))), name='valid_to_after_valid_from'),
        ),
    ]

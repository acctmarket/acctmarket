# Generated by Django 5.0.10 on 2024-12-16 11:38

import acctmarket.utils.models
import auto_prefetch
import ckeditor_uploader.fields
import cloudinary.models
import django.db.models.deletion
import django.db.models.manager
import taggit.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ecommerce', '0001_initial'),
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.CharField(default=acctmarket.utils.models.generate_uuid, editable=False, max_length=120, primary_key=True, serialize=False, unique=True)),
                ('visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(blank=True, default='', max_length=50)),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(default='', null=True, verbose_name='Description')),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Announcement',
                'verbose_name_plural': 'Announcements',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.CharField(default=acctmarket.utils.models.generate_uuid, editable=False, max_length=120, primary_key=True, serialize=False, unique=True)),
                ('visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(blank=True, default='', max_length=50)),
                ('image', cloudinary.models.CloudinaryField(blank=True, default='', max_length=255, verbose_name='image')),
                ('slug', models.SlugField(blank=True, default='')),
                ('sub_title', models.CharField(blank=True, default='', max_length=50)),
                ('featured_category', auto_prefetch.ForeignKey(blank=True, help_text='choose products by category only', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ecommerce.category', verbose_name='Banner category')),
                ('featured_product', auto_prefetch.ForeignKey(blank=True, help_text='choose products by a particular product only', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ecommerce.product', verbose_name='Banner product')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'prefetch_manager',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='BlogCategory',
            fields=[
                ('id', models.CharField(default=acctmarket.utils.models.generate_uuid, editable=False, max_length=120, primary_key=True, serialize=False, unique=True)),
                ('visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(blank=True, default='', max_length=50)),
                ('image', cloudinary.models.CloudinaryField(blank=True, default='', max_length=255, verbose_name='image')),
                ('slug', models.SlugField(blank=True, default='')),
                ('sub_category', auto_prefetch.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='blog.blogcategory')),
            ],
            options={
                'verbose_name_plural': 'Blog Categories',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.CharField(default=acctmarket.utils.models.generate_uuid, editable=False, max_length=120, primary_key=True, serialize=False, unique=True)),
                ('visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(blank=True, default='', max_length=50)),
                ('image', cloudinary.models.CloudinaryField(blank=True, default='', max_length=255, verbose_name='image')),
                ('slug', models.SlugField(blank=True, default='')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(default='', null=True, verbose_name='Description')),
                ('category', auto_prefetch.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='blog.blogcategory', verbose_name='Blog Category')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='ecommerce.CharUUIDTaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('user', auto_prefetch.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='User Post')),
            ],
            options={
                'verbose_name_plural': 'Posts',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
    ]
